import{_ as e,c as n,o as l,a as s}from"./app.cf515630.js";const g=JSON.parse('{"title":"Installing and Updating Filters","description":"","frontmatter":{"title":"Installing and Updating Filters"},"headers":[{"level":2,"title":"Filter Dependencies","slug":"filter-dependencies","link":"#filter-dependencies","children":[]},{"level":2,"title":"Installing a Filter","slug":"installing-a-filter","link":"#installing-a-filter","children":[]},{"level":2,"title":"Adding Filter to Profile","slug":"adding-filter-to-profile","link":"#adding-filter-to-profile","children":[]},{"level":2,"title":"Install All","slug":"install-all","link":"#install-all","children":[]},{"level":2,"title":"Filter Versioning","slug":"filter-versioning","link":"#filter-versioning","children":[{"level":3,"title":"Installing a Specific Version","slug":"installing-a-specific-version","link":"#installing-a-specific-version","children":[]},{"level":3,"title":"Pinned Versions","slug":"pinned-versions","link":"#pinned-versions","children":[]},{"level":3,"title":"Updating your Filters","slug":"updating-your-filters","link":"#updating-your-filters","children":[]}]}],"relativePath":"guide/installing-filters.md","lastUpdated":1669059870000}'),a={name:"guide/installing-filters.md"},t=s(`<h1 id="installing-and-updating-filters" tabindex="-1">Installing and Updating Filters <a class="header-anchor" href="#installing-and-updating-filters" aria-hidden="true">#</a></h1><p>To start using a filter, you need to do four things:</p><ol><li>Ensure you can run the filter</li><li>Install the filter</li><li>Add the filter to the profile which you would like to use it.</li><li>Run your profile, to test it out!</li></ol><h2 id="filter-dependencies" tabindex="-1">Filter Dependencies <a class="header-anchor" href="#filter-dependencies" aria-hidden="true">#</a></h2><p>Filters are written in <a href="https://www.wikiwand.com/en/Programming_language" target="_blank" rel="noreferrer">programming languages</a>. These languages may not be installed on your computer by default. Before installing a filter, you should ensure you have the proper programming language installed. The &quot;Filter Types&quot; documentation has detailed installation instructions for every regolith-supported language!</p><p>For example, if the filter relies on Python, you can find installation instructions <a href="/regolith/guide/python-filters">here</a>.</p><h2 id="installing-a-filter" tabindex="-1">Installing a Filter <a class="header-anchor" href="#installing-a-filter" aria-hidden="true">#</a></h2><p>Regolith contains a powerful installation command, which will download a filter from GitHub, and install any required libraries for you. In general, the format is like this: <code>regolith install &lt;filter_identifier&gt;</code></p><p>The value of <code>filter_identifier</code> will depend on where the filter is hosted. Filters listed on the <a href="https://github.com/Bedrock-OSS/regolith-filter-resolver/blob/main/resolver.json" target="_blank" rel="noreferrer">Bedrock-OSS/regolith-filter-resolver</a> repository can be installed by their name. For example, to install the <code>name_ninja</code> filter, you would run the:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">regolith install name_ninja</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>If the filter is not listed on the resolver repository, you will need to use the following format: <code>github.com/&lt;user&gt;/&lt;repository&gt;/&lt;folder&gt;</code>.</p><p>For example, to install <code>name_ninja</code> using the full format, you would run:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">regolith install github.com/Bedrock-OSS/regolith-filters/name_ninja</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>The longer form can be used to install filters from private repositories.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>The <code>install</code> command relies on <code>git</code>. You may download git <a href="https://git-scm.com/download/win" target="_blank" rel="noreferrer">here</a>.</p></div><h2 id="adding-filter-to-profile" tabindex="-1">Adding Filter to Profile <a class="header-anchor" href="#adding-filter-to-profile" aria-hidden="true">#</a></h2><p>After installing, the filter will appear inside of <code>filter_definitions</code> of <code>config.json</code>. You can now add this filter to a profile like this:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">default</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">export</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">readOnly</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">target</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">development</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">filters</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">filter</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">FILTER_NAME</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="install-all" tabindex="-1">Install All <a class="header-anchor" href="#install-all" aria-hidden="true">#</a></h2><p>Regolith is intended to be used with git version control, and by default the <code>.regolith</code> folder is ignored. That means that when you collaborate on a project, or simply re-clone your existing projects, you will need an easy way to download all the filters again!</p><p>You may use the command <code>regolith install-all</code>, which will check <code>config.json</code>, and install every filter in the <code>filterDefinitions</code>.</p><p>{: .notice--warning} This is only intended to be used with existing projects. To install new filters, use <code>regolith install</code>.</p><h2 id="filter-versioning" tabindex="-1">Filter Versioning <a class="header-anchor" href="#filter-versioning" aria-hidden="true">#</a></h2><p>Filters in Regolith are optionally versioned with a <a href="https://semver.org/" target="_blank" rel="noreferrer">semantic version</a>. As filters get updated, new versions will be released, and you can optionally update.</p><p>{: .notice--warning} If you don&#39;t specify a version, the <code>install</code> command will pick a sensible default. First, it will search for the latest release. If that doesn&#39;t exist (such as a filter that has no versions), it will select the latest commit in the repository. In both cases, the installed version will be <code>pinned</code>.</p><h3 id="installing-a-specific-version" tabindex="-1">Installing a Specific Version <a class="header-anchor" href="#installing-a-specific-version" aria-hidden="true">#</a></h3><p>When installing, you can optionally include a version key after two equals signs (<code>==</code>):</p><ul><li>\u2B50 Version: <code>regolith install name_ninja==1.2.8</code></li><li>Unpinned Head: <code>regolith install name_ninja==HEAD</code></li><li>Unpinned Latest: <code>regolith install name_ninja==latest</code></li><li>SHA: <code>regolith install name_ninja==adf506df267d10189b6edcdfeec6c560247b823f</code></li></ul><h3 id="pinned-versions" tabindex="-1">Pinned Versions <a class="header-anchor" href="#pinned-versions" aria-hidden="true">#</a></h3><p>In your <code>config.json</code>, every filter will include a <code>version</code> field, which specifies which version of the filter to use. By default, this version will be <code>pinned</code>, meaning that it won&#39;t be updated, even if new versions release. This provides you safety, and ensures that your projects will continue to operate without interruption even if filters release breaking changes.</p><p>Optionally, you may mark filters as <code>unpinned</code>, which signifies that your project wants the latest version of the filter, no questions asked. There are two available <code>unpinned</code> versions:</p><ul><li><code>latest</code> points to the latest released version tag.</li><li><code>HEAD</code> points to the latest commit of the repository, regardless of release tags.</li></ul><h3 id="updating-your-filters" tabindex="-1">Updating your Filters <a class="header-anchor" href="#updating-your-filters" aria-hidden="true">#</a></h3><p>If you want to update the version of the filter used in your project, you can use the <code>regolith install</code> command again. By default, the <code>install</code> command is not allowed to update existing filters, but you can use the <code>--force</code> flag to change this behavior. The flag must be used after the <code>install</code> arguments.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">regolith install name_ninja --force</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Alternatively, you can modify the <code>version</code> field in <code>config.json</code> and run <code>regolith install-all</code>. Regolith install-all is useful for working in a team, when other team members may have to update or add filters to the project.</p>`,36),i=[t];function o(r,p,c,d,h,u){return l(),n("div",null,i)}const y=e(a,[["render",o]]);export{g as __pageData,y as default};
