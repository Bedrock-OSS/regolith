import{_ as s,c as a,o,a as l}from"./app.50f8add4.js";const _=JSON.parse('{"title":"Local Filters","description":"","frontmatter":{"title":"Local Filters"},"headers":[],"relativePath":"guide/local-filters.md","lastUpdated":1724789818000}'),t={name:"guide/local-filters.md"},e=l(`<h1 id="local-filters" tabindex="-1">Local Filters <a class="header-anchor" href="#local-filters" aria-hidden="true">#</a></h1><p>Local filters are great for quickly prototyping, or for personal filters that you do not want to share with anyone. In this case, you can simply run a local file:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">runWith</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">python</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">script</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./filters/example.py</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>The <code>.</code> path will be local to the root of the regolith project.</p>`,4),n=[e];function p(c,r,i,D,y,F){return o(),a("div",null,n)}const u=s(t,[["render",p]]);export{_ as __pageData,u as default};
